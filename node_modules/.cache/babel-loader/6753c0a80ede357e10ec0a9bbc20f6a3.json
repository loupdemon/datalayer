{"ast":null,"code":"var _jsxFileName = \"/Users/aghilas/Documents/layerdata/layer/datalayer/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //////////////////////////////////////////////////////////////////\n//////////////****AUTHOR : AGHILES AZZOUG -  *////////////////////\n//////////////*****JUIN - AOUT 2021 */////////////////////////////\n/////////////Développement et design /////////////////////////////\n/////////Propriété privé de Layer Data - Rachid Tighremt//////////\n////////Tous droits reservés ... interdit tout plagiat ///////////\n////////    interdit tout usage sans autorisation     ////////////\n///////---------------------------------------------//////////////\n//////////////////////////////////////////////////////////////////\n\nimport { Container, FormWrap, FormContent, Icon, Form, FormH1, FormLabel, FormInput, FormInputmessage, FormButton } from './ContactStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  //setName permet de changer la variable, useState permet l'usage \"\"\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); //-------------------------------------------\n\n  const isEmail = () => {\n    //let mail= document.getElementById('not_mail');\n    let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (email.match(regex)) {\n      //mail.style.display ='none';\n      return true;\n    } else {\n      // mail.style.display='block';\n      // mail.style.animation ='dongle 1s';\n      return false;\n    }\n  }; //---------------------------------------\n  //regex pour telephone non inclus //\n\n  /*const isPhone = () => {\n    let regex = /^[0-9]{,20}$/ ;\n    if (phone.match(regex)){\n      //mail.style.display ='none';\n      return true;\n    } else {\n      return false;\n    }\n  }*/\n  //-------------------------------------------\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && isEmail() && message) {\n      //la fonction retour qui renvoit les composants remplis//\n      //toutes les valeurs qui sont dans nos states name, company...//\n      sendFeedback(\"template_feq1f2l\", {\n        //template ID à recuper dans mail js //\n        name,\n        company,\n        phone,\n        email,\n        message\n      });\n    } else {\n      console.log('error');\n    }\n  };\n  /*const { register, formState: { errors } } = useState();*/\n\n\n  const sendFeedback = (templateId, variables) => {\n    window.emailjs.send(\"service_zlda5gq\", templateId, variables).then(res => {\n      console.log('success !');\n      setName(\"\");\n      setCompany(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n    }).catch(err => document.querySelector('.form-message').innerHTML = \"Une erreur s'est produite, veuillez réessayer.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"Layer Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            action: \"#\",\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Veuillez bien remplir les champs avec * \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              onChange: e => setName(e.target.value),\n              placeholder: \"Votre nom et prenom *\",\n              value: name,\n              autoComplete: \"off\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Entreprise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"Email\",\n              id: \"company\",\n              name: \"company\",\n              onChange: e => setCompany(e.target.value),\n              placeholder: \"Le nom de votre soci\\xE9t\\xE9\",\n              value: company,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Num\\xE9ro de t\\xE9l\\xE9phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"Email\",\n              id: \"phone\",\n              name: \"phone\",\n              onChange: e => setPhone(e.target.value),\n              placeholder: \"(+indicatif du pays si vous \\xEAtes \\xE0 l'\\xE9tranger)\" //{...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})}\n              ,\n              value: phone,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"L'adresse mail vers laquelle je vais vous repondre *\",\n              value: email,\n              autoComplete: \"off\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Message*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInputmessage, {\n              id: \"message\",\n              name: \"message\",\n              onChange: e => setMessage(e.target.value),\n              placeholder: \"Votre message *\",\n              value: message,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"button\",\n              value: \"Envoyer\",\n              onClick: handleSubmit,\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Contact, \"1pVA72sFZnUE5LEts5t8y9amonU=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/aghilas/Documents/layerdata/layer/datalayer/src/components/Contact/index.js"],"names":["React","useState","Container","FormWrap","FormContent","Icon","Form","FormH1","FormLabel","FormInput","FormInputmessage","FormButton","Contact","name","setName","company","setCompany","phone","setPhone","email","setEmail","message","setMessage","isEmail","regex","match","handleSubmit","e","preventDefault","sendFeedback","console","log","templateId","variables","window","emailjs","send","then","res","catch","err","document","querySelector","innerHTML","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//////////////////////////////////////////////////////////////////\n//////////////****AUTHOR : AGHILES AZZOUG -  *////////////////////\n//////////////*****JUIN - AOUT 2021 */////////////////////////////\n/////////////Développement et design /////////////////////////////\n/////////Propriété privé de Layer Data - Rachid Tighremt//////////\n////////Tous droits reservés ... interdit tout plagiat ///////////\n////////    interdit tout usage sans autorisation     ////////////\n///////---------------------------------------------//////////////\n//////////////////////////////////////////////////////////////////\nimport {\n  Container,\n  FormWrap,\n  FormContent,\n  Icon,\n  Form,\n  FormH1,\n  FormLabel,\n  FormInput,\n  FormInputmessage,\n  FormButton\n  } from './ContactStyled'\n\nconst Contact = () => {\n    //setName permet de changer la variable, useState permet l'usage \"\"\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  \n\n  //-------------------------------------------\n  const isEmail = () => {\n    //let mail= document.getElementById('not_mail');\n    let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/ ;\n    if (email.match(regex)){\n      //mail.style.display ='none';\n      return true;\n    } else {\n     // mail.style.display='block';\n     // mail.style.animation ='dongle 1s';\n      return false;\n    }\n  }\n\n  //---------------------------------------\n  //regex pour telephone non inclus //\n  /*const isPhone = () => {\n    let regex = /^[0-9]{,20}$/ ;\n    if (phone.match(regex)){\n      //mail.style.display ='none';\n      return true;\n    } else {\n      return false;\n    }\n  }*/\n   \n  //-------------------------------------------\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && isEmail() && message){\n    //la fonction retour qui renvoit les composants remplis//\n    //toutes les valeurs qui sont dans nos states name, company...//\n      sendFeedback(\"template_feq1f2l\", { //template ID à recuper dans mail js //\n        name,\n        company,\n        phone,\n        email,\n        message,\n      });\n    } else {\n    console.log('error');\n    }\n    \n  };\n  /*const { register, formState: { errors } } = useState();*/\n  const sendFeedback = (templateId, variables) => {\n\n    window.emailjs\n      .send(\"service_zlda5gq\", templateId, variables)\n      .then((res) => {\n        console.log('success !');\n        setName(\"\");\n        setCompany(\"\");\n        setPhone(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      })\n      .catch(\n        (err) =>\n          document.querySelector('.form-message').innerHTML =\n            \"Une erreur s'est produite, veuillez réessayer.\")\n  };\n\n  return (\n      <div>\n        <Container>\n          <FormWrap>\n            <Icon to='/'>Layer Data</Icon>\n            <FormContent>\n              <Form action='#'>\n                <FormH1>Veuillez bien remplir les champs avec * </FormH1>\n                <FormLabel htmlFor='email'>Nom</FormLabel>\n                <FormInput  type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            onChange={(e) => setName(e.target.value)}\n                            placeholder=\"Votre nom et prenom *\"\n                            value={name}\n                            autoComplete=\"off\"\n                            required>\n                </FormInput>\n                <FormLabel htmlFor='email'>Entreprise</FormLabel>\n                <FormInput  type=\"Email\"\n                            id=\"company\"\n                            name=\"company\"\n                            onChange={(e) => setCompany(e.target.value)}\n                            placeholder=\"Le nom de votre société\"\n                            value={company}\n                            required>\n                </FormInput>\n                <FormLabel htmlFor='email'>Numéro de téléphone</FormLabel>\n                <FormInput  type=\"Email\"\n                            id=\"phone\"\n                            name=\"phone\"\n                            onChange={(e) => setPhone(e.target.value)}\n                            placeholder=\"(+indicatif du pays si vous êtes à l'étranger)\"\n                            //{...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})}\n                            value={phone}\n                            required>\n                </FormInput>\n                <FormLabel htmlFor='email'>Email*</FormLabel>\n                <FormInput  type='email'\n                            id=\"email\"\n                            name=\"email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"L'adresse mail vers laquelle je vais vous repondre *\"\n                            value={email}\n                            autoComplete=\"off\"\n                            required>\n                </FormInput>\n                <FormLabel  htmlFor='email'>Message*</FormLabel>\n                <FormInputmessage  id=\"message\"\n                            name=\"message\"\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Votre message *\"\n                            value={message}\n                            required>\n                </FormInputmessage>\n                <FormButton   type=\"button\"\n                              value=\"Envoyer\"\n                              onClick={handleSubmit}>\n                  Envoyer</FormButton>\n              </Form>\n            </FormContent>\n          </FormWrap>\n        </Container>\n        \n      </div>\n    )\n  };\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}